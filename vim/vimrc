" basic setup
set nocompatible
syntax enable
set path+=**
set wildmenu
set number
set relativenumber
set cursorline
set splitright
set splitbelow
let mapleader=','
set ruler
set colorcolumn=80
set t_Co=256
set noswapfile
nnoremap Q <nop>
set timeout
set timeoutlen=3000
set ttimeoutlen=100
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set backspace=indent,eol,start
colorscheme turtles

set wildignore=*.pyc,*.orig
" Use ctrl-[hjkl] to select the active split!
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

nmap <silent> <leader>q :quit<CR>

"----------- BASIC SETUP

" autoremove trailing whitespaces on save
autocmd BufWritePre * %s/\s\+$//e

" VUNDLE
filetype off

set rtp+=$HOME/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-fugitive'
Plugin 'beigebrucewayne/Turtles'
Plugin 'airblade/vim-gitgutter'

Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'davidhalter/jedi-vim'
Plugin 'Raimondi/delimitMate'
Plugin 'Valloric/YouCompleteMe'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'tpope/vim-surround'

Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

Plugin 'mileszs/ack.vim'

" MARKDOWN plugins
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

" distract free mode
Plugin 'junegunn/goyo.vim'

call vundle#end()

filetype plugin on

" GITGUTTER
"
set updatetime=250


" POWERLINE
let g:airline_theme='dark'
let g:airline#extensions#branch#enabled=1
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tagbar#enabled=1
let g:airline_skip_empty_sections=1
let g:airline#extensions#virtualenv#enabled=1
let g:airline_powerline_fonts = 1



" JEDI-VIM
let g:jedi#auto_close_doc=1

" NERDTREE
nnoremap <F2> :NERDTreeToggle<CR>
nnoremap <F3> :NERDTreeFind<CR>
let NERDTreeIgnore=['\~$', '\.orig$', '\.pyc$', '__pycache__']

" TAGBAR
nnoremap <F9> :TagbarToggle<CR>

" MARKDOWN
au! BufRead,BufNewFile *.markdown set filetype=markdown
au! BufRead,BufNewFile *.md       set filetype=markdown

" JSON specyfic
au! BufRead,BufNewFile *.json set textwidth=0

" jsx
let g:jsx_ext_required = 0

" if !exists("g:ycm_semantic_triggers")
"   let g:ycm_semantic_triggers = {}
" endif
" let g:ycm_semantic_triggers['typescript'] = ['.']

let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

" UltiSnips
source $HOME/dotfiles/vim/utlisnips.vim
source $HOME/dotfiles/vim/fugitive.vim

nnoremap <C-P> :FZF<CR>
nnoremap <leader>. :Tags<CR>
nnoremap <leader>b :Gblame<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>s :setlocal spell!<CR>

set fileformats=unix,mac,dos

autocmd! FileType python nnoremap <leader>x :terminal python3 %<CR>
autocmd! FileType go nnoremap <silent> <leader>t :terminal go test<CR>

" ack.vim - search
let g:ackprg = 'ag --vimgrep'

" markdown plugin setup
let g:vim_markdown_folding_disabled = 1

